<?php

namespace backend\models;

use backend\mosquitto\phpMQTT;
use ErrorException;
use stdClass;
use Yii;

/**
 * This is the model class for table "menu".
 *
 * @property int $id
 * @property int $id_prato
 * @property int $id_bebida
 * @property int $id_sobremesa
 * @property string $preco
 * @property string $imagem
 *
 * @property Sobremesa $sobremesa
 * @property Prato $prato
 * @property Bebida $bebida
 * @property Pedido[] $pedidos
 */
class Menu extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'menu';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id_prato', 'id_bebida', 'id_sobremesa', 'preco', 'imagem'], 'required'],
            [['id_prato', 'id_bebida', 'id_sobremesa'], 'integer'],
            [['preco'], 'number'],
            [['imagem'], 'string', 'max' => 255],
            [['id_sobremesa'], 'exist', 'skipOnError' => true, 'targetClass' => Sobremesa::className(), 'targetAttribute' => ['id_sobremesa' => 'id']],
            [['id_prato'], 'exist', 'skipOnError' => true, 'targetClass' => Prato::className(), 'targetAttribute' => ['id_prato' => 'id']],
            [['id_bebida'], 'exist', 'skipOnError' => true, 'targetClass' => Bebida::className(), 'targetAttribute' => ['id_bebida' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_prato' => 'Id Prato',
            'id_bebida' => 'Id Bebida',
            'id_sobremesa' => 'Id Sobremesa',
            'preco' => 'Preco',
            'imagem' => 'Imagem',
        ];
    }

    public function delete()
    {
        if (file_exists('img/menus/' . $this->imagem)) {
            unlink('img/menus/' . $this->imagem);
        }

        return parent::delete(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSobremesa()
    {
        return $this->hasOne(Sobremesa::className(), ['id' => 'id_sobremesa']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPrato()
    {
        return $this->hasOne(Prato::className(), ['id' => 'id_prato']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBebida()
    {
        return $this->hasOne(Bebida::className(), ['id' => 'id_bebida']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPedidos()
    {
        return $this->hasMany(Pedido::className(), ['id_menu' => 'id']);
    }


    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes);
        //Obter dados do registo em causa
        $id = $this->id;
        $prato = $this->id_prato;
        $bebida = $this->id_bebida;
        $sobremesa = $this->id_sobremesa;
        $preco = $this->preco;
        $imagem = $this->imagem;

        $myObj = new stdClass();
        $myObj->id = $id;
        $myObj->prato = $prato;
        $myObj->bebida = $bebida;
        $myObj->sobremesa = $sobremesa;
        $myObj->preco = $preco;
        $myObj->imagem = $imagem;
        $myJSON = json_encode($myObj);

        if($insert) $this->FazPublish("INSERT",$myJSON);
        else $this->FazPublish("UPDATE",$myJSON);
    }

    public function afterDelete()
    {
        parent::afterDelete();
        $id = $this->id;
        $myObj = new stdClass();
        $myObj->id=$id;
        $myJSON = json_encode($myObj);
        $this->FazPublish("DELETE",$myJSON);
    }

    public function FazPublish($canal,$msg)
    {
        $server = "127.0.0.1";
        $port = 1883;
        $username = ""; // set your username
        $password = ""; // set your password
        $client_id = "Menu"; // unique!
        $mqtt = new phpMQTT($server, $port, $client_id);
        try{
            $mqtt->connect(true, NULL, $username, $password);
            $mqtt->publish($canal, $msg, 0);
            $mqtt->close();
        }catch (ErrorException $e){

        }
    }

}
